/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

apply plugin: 'eclipse'
apply plugin: 'idea'

//apply plugin: 'jetty'

// In this section you declare where to find the dependencies of your project
repositories {
	  maven {
	    url 'https://maven-central.storage.googleapis.com'
	  }
    maven {
        url ("https://maven.oracle.com")
    }
        
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

ext {
    slf4jVersion = '1.7.25'
    junitVersion = '4.12'
    springRetryVersion = '1.1.2.RELEASE'
    aspectjVersion = '1.8.7'
    springVersion = '5.0.2.RELEASE'
    log4jVersion = '1.2.17'
    mockitoVersion = '1.10.19'
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Logging
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    //compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
    
    // jersey/jetty
	compile 'javax.ws.rs:javax.ws.rs-api:2.1'
	compile 'org.glassfish.jersey.containers:jersey-container-jetty-servlet:2.26-b09'
	compile 'org.glassfish.jersey.containers:jersey-container-jetty-http:2.26-b09'
	compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.26-b09'
	compile 'org.glassfish.jersey.inject:jersey-hk2:2.26-b09'
	compile 'org.glassfish.jersey.core:jersey-server:2.26-b09'
	compile 'org.glassfish.jersey.core:jersey-common:2.26-b09'
	compile 'org.eclipse.jetty:jetty-webapp:9.4.3.v20170317'
	compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.26-b09'
    
    // Spring
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"
    //compile "org.springframework.boot:spring-boot-autoconfigure:1.5.9.RELEASE"
    //compile "org.springframework.retry:spring-retry:$springRetryVersion"
      
    //oracle
    //compile("org.springframework.boot:spring-boot-starter-data-jpa")
    //compile "org.springframework.boot:spring-boot-starter"
    //compile "com.oracle.jdbc:ojdbc7:12.1.0.2"
    //compile "com.github.noraui:ojdbc7:12.1.0.2"    
    //compile "com.oracle.jdbc:ojdbc7:12.1.0.2"
    //compile "com.oracle.jdbc:ojdbc14:10.2.0.3.0"
    //compile "com.oracle.weblogic:ojdbc7:12.1.3-0-0"
    compile files('lib/ojdbc8.jar')
    
    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    //testCompile 'junit:junit:$junitVersion'
    //testCompile "org.springframework:spring-test:$springVersion"
    testRuntime "log4j:log4j:$log4jVersion"
    testRuntime "org.slf4j:slf4j-log4j12:$slf4jVersion"
    testRuntime "org.springframework:spring-context-support:$springVersion"
    testRuntime "cglib:cglib-nodep:3.1"
    testRuntime "commons-dbcp:commons-dbcp:1.4"
    testRuntime "commons-pool:commons-pool:1.6"
    testRuntime "org.hsqldb:hsqldb:2.3.1"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Define the main class for the application
//mainClassName = 'App'
mainClassName = 'com.delphi.rest.server.OasisConsoleServer'

test {
  testLogging.showStandardStreams = true
}

/*task execute(type:JavaExec) {
   main = com.delphi.rest.server.OasisConsoleServer
   classpath = sourceSets.main.runtimeClasspath
}*/

/*jar {
    manifest {
        attributes 'Implementation-Title': 'OasisConsoleServer Gradle Quickstart',
                   'Implementation-Version': 1.0,
                   'Main-Class': 'com.delphi.rest.server.OasisConsoleServer'
    }
}*/

jar {
  manifest { 
    attributes 'Implementation-Title': 'OasisConsoleServer',
               'Implementation-Version': 1.0,
               "Main-Class": "$mainClassName"
  }  

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}
